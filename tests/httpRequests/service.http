# Get all services of user
GET  {{baseAddress}}/service/getAll
Accept: application/json
AuthToken:  {{authToken}}

> {%
client.test("Request executed successfully", function () {
    client.assert(response.status === 200, "Response status is not 200")
});
%}

###

# create service for user
POST  {{baseAddress}}/service/create
Content-Type: application/json
AuthToken:  {{authToken}}

{
  "name": "Service name",
  "price": 1500
}


> {%
client.test("Request executed successfully", function () {
    client.assert(response.status === 200, "Response status is not 200")
});
%}

###

# update service for user
POST  {{baseAddress}}/service/update
Content-Type: application/json
AuthToken:  {{authToken}}

{
  "id": 1,
  "client": {
    "name": "New Service name",
    "price": 200
  }
}


> {%
client.test("Request executed successfully", function () {
    client.assert(response.status === 200, "Response status is not 200")
});
%}

###

# delete service of user
POST  {{baseAddress}}/service/delete
Content-Type: application/json
AuthToken:  {{authToken}}

{
  "id": 1
}


> {%
client.test("Request executed successfully", function () {
    client.assert(response.status === 200, "Response status is not 200")
});
%}